collections: [ { //
collection object id: "collection_1",  //string: id of collection
images: [], //list: references to images from <images>
approved: false, //boolean: initial->false, finish->true or collection deleted
plate: { type: 1, number: "12345678" }, //null or {type:1/2/3, number:string}
status: false, //boolean: initial->false, finish->true or collection deleted 
onWork: false //boolean: initial->false, minwhile->true/false, finish->false

insert into collections set collection_id = 'collection_1', 
`json` = JSON_OBJECT(
        'collection_id', 'collection_1',
        'images' ,
        JSON_ARRAY('image_01' , 'image_02' , 'image_03' , 'image_04') ,
        'approved', false,
        'status', false)

insert into collections1 set collection_id = 123, 
`json` = JSON_OBJECT(
        'collection_id', md5('123'),
        'images' ,
        JSON_ARRAY('image_01' , 'image_02' , 'image_03' , 'image_04') ,
        'approved', false,
        'status', false)

image object id: "image_1", //string: id of image 
path: "a/b/c/d", //string: url/path in fs 
transaction: "123456789", //string: transaction number 
gate: "TG_XX", //string: gate number 
date: "01/02/03", //string: day of image 
time: "01:02:03", //string: hour:min:sec of image 
motor_crop: [1,2,3,4], //number[]: position of motorbike 
plate_crop: [1,2,3,4], //number[]: position of plate 
plate: { type: 1, number: "12345678" }, //null or {type:1/2/3, number:string} 
rejection: "reason", //null or reason of rejection (initial->null) 
onWork: false //boolean: initial->false, onWork(singles)->true, finish->false }

insert into images set image_id = 'image_01', 
`json` = JSON_OBJECT(
        'image_id', 'image_01',
        'path', '/images/image_01',
        'transaction', "123456789",
        'gate', 'TG_XX',
        'date', '01/02/20',
        'time', '01:02:20',
        'motor_crop', 1,
        'plate_crop', 1,
        'plate', JSON_OBJECT('type', 1, 'number', '123654789'),
        'rejection', 'Lama Kova af Lagova',
        'onWork', false);


chunks: [ { //chunk object 
id: "chunk_1", //string: id of chunk 
collections: [], //list: references to collections from <collections> 
singles: [], //images[]: list of references to images from <images> 
status: false, //boolean: initial->false, finish->true 
onWork: false //boolean: initial->false, onWork->true, finish->false }

insert into chunks set chunk_id = 'chunk_01',
`json` = JSON_OBJECT(
    'chunk_id', 'chunk_01',
    'collections', JSON_ARRAY('collection_1' , 'collection_2' , 'collection_4' , 'collection_4') ,
    'singles', JSON_ARRAY('image_01' , 'image_02' , 'image_03' , 'image_04') ,
    'status', false,
    'onWork', false);


    {"images": ["image_01", "image_02", "image_03", "image_04"], "status": 0, "approved": 0, "collection_id": "collection_1"}